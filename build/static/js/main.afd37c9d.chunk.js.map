{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAmBeA,EAbF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACzB,OACC,sBAAKC,UAAY,sDAAjB,UACC,qBAAKC,IAAI,SAASC,IAAG,8BAAyBH,EAAzB,cACrB,gCACC,6BAAKF,IACL,4BAAIC,WCgBOK,EAzBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAMjB,OACC,8BAEEA,EAAOC,KAAI,SAACC,EAAKC,GAChB,OACG,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCACC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACCA,UAAU,gCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCECI,EATD,SAACC,GACd,OACC,qBAAKC,MAAQ,CAACC,SAAU,SAAUC,OAAO,mBAAoBC,OAAO,SAApE,SACEJ,EAAMK,YCgBKC,E,kDAlBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAM,CACVC,UAAU,GAHM,E,qDAMlB,SAAkBC,EAAMC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAE1B,WAEC,OAAGG,KAAKJ,MAAMC,SACN,qDAEDG,KAAKX,MAAMK,a,GAfOQ,aCqDZC,G,wDA5Cd,aAAc,IAAD,8BACZ,gBAaDC,eAAe,SAACC,GACf,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAbzC,EAAKX,MAAO,CACXlB,OAAQ,GACRK,YAAa,IAJF,E,qDAQb,WAAoB,IAAD,OAClByB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAOkC,S,oBAWvC,WACC,MAA2BZ,KAAKJ,MAAzBlB,EAAP,EAAOA,OAAOK,EAAd,EAAcA,YACR8B,EAAenC,EAAOoC,QAC3B,SAAAC,GACC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEvD,OAAQtC,EAAOwC,OAGb,sBAAK5C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAgBgB,KAAKI,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,OAAQmC,WAPtB,oBAAIvC,UAAU,KAAd,yB,GA9Be6C,IAAMjB,YCETkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.afd37c9d.chunk.js","sourcesContent":["import React from 'react';\n\n\n\n\n\nconst Card = ({name,email,id}) => {\n\treturn (\n\t\t<div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`http://robohash.org/${id}?200*200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\n\t\t);\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\t//testing for ErrorBoundry\n\t// if(true){\n\t// \tthrow new Error('Noooo');\n\t// }\n\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\trobots.map((user,i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\t\t\t\temail={robots[i].email}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\t\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input\n\t\t\t\tclassName='pa3 ba b--green bg-light-blue' \n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search robots'\n\t\t\t\tonChange={searchChange} \n\t\t\t/>\n\t\t</div>\n\t\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll =(props) => {\n\treturn (\n\t\t<div style ={{overflow: 'scroll', border:'0px solid  black', height:'850px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t\t);\n};\n\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\thasError: false\n\t\t}\n\t}\n\tcomponentDidCatch(error,info){\n\t\tthis.setState({hasError: true});\n\t}\n\trender()\n\t{\n\t\tif(this.state.hasError){\n\t\t\treturn <h1>Ooooops That's bad!</h1>\n\t\t}\n\t\treturn this.props.children\n\t}\n} \n\nexport default ErrorBoundry;","import React from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundry';\n\nimport './App.css';\n\n\n\nclass App extends React.Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state= {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({robots:users}));\n\t}\n\n\tonSearchChange=(event)=>{\n\t\tthis.setState({searchfield: event.target.value});\n\t\n\n\t}\n\n\n\n\trender(){\n\t\tconst {robots,searchfield}=this.state;\n\t\tconst filteredRobots=robots.filter(\n\t\t\trobot => {\n\t\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t\t})\n\t\treturn !robots.length ? \n\t\t\t<h1 className='tc'>Loading</h1>:\n\t\t\t(\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t\t\t<SearchBox searchChange = {this.onSearchChange}/>\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t)\t\n\t}\t\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}